/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        as_ESC {
            bindings = <&kp ESCAPE>;
            key-positions = <13 14>;
        };

        bootLeft {
            bindings = <&bootloader>;
            key-positions = <38 37 36>;
        };

        bootRight {
            bindings = <&bootloader>;
            key-positions = <39 40 41>;
        };

        sys_reset_left {
            bindings = <&sys_reset>;
            key-positions = <5 4 3>;
        };

        sys_reset_right {
            bindings = <&sys_reset>;
            key-positions = <6 7 8>;
        };
    };

    macros {
        parenthesis: parenthesis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT_ARROW>;
            label = "PARENTHESIS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt GRAVE ESCAPE  &kp Q             &kp W  &kp E      &kp R           &kp T      &kp Y          &kp U               &kp I                    &kp O    &kp P                  &kp BACKSPACE
&kp TAB           &kp A             &kp S  &kp D      &kp F           &kp G      &kp H          &kp J               &kp K                    &kp L    &kp SEMI               &kp SINGLE_QUOTE
&kp LEFT_SHIFT    &mt LEFT_SHIFT Z  &kp X  &kp C      &kp V           &kp B      &kp N          &kp M               &kp COMMA                &kp DOT  &mt RIGHT_SHIFT SLASH  &kp NON_US_BACKSLASH
                                           &kp SPACE  &lt 1 LEFT_GUI  &kp RCTRL  &kp RIGHT_ALT  &lt 2 LEFT_BRACKET  &mt RIGHT_BRACKET ENTER
            >;
        };

        pc_layer {
            bindings = <
&trans   &kp LG(NUMBER_3)  &kp LG(N0)    &kp LG(N9)        &mt LC(LS(T)) LG(N5)  &kp LG(N4)  &trans                           &trans                    &trans                   &trans           &trans           &trans
&kp TAB  &kp LG(N7)        &kp LEFT_ALT  &kp LG(R)         &kp CAPS              &kp LG(N8)  &mt HOME LEFT                    &mt PAGE_DOWN DOWN        &mt PG_UP UP_ARROW       &mt END RIGHT    &trans           &trans
&trans   &kp LEFT_SHIFT    &trans        &kp K_CALCULATOR  &kp LG(K)             &kp DELETE  &mt LC(PRINTSCREEN) PRINTSCREEN  &mt K_MUTE C_VOLUME_DOWN  &mt K_STOP K_PLAY_PAUSE  &kp C_VOLUME_UP  &kp RIGHT_SHIFT  &trans
                                         &trans            &trans                &kp LCTRL   &kp RIGHT_ALT                    &mo 3                     &trans
            >;
        };

        excl {
            bindings = <
&trans     &kp F1                   &kp F2  &kp F4    &mt LA(F4) F4  &kp F5     &kp F6     &kp F7    &kp F8    &kp F9                &kp F10            &mt F12 F11
&kp PLUS   &kp EXCL                 &kp AT  &kp HASH  &kp DLLR       &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR  &kp LEFT_PARENTHESIS  &kp RPAR           &mt UNDER MINUS
&kp EQUAL  &mt LEFT_SHIFT NUMBER_1  &kp N2  &kp N3    &kp N4         &kp N5     &kp N6     &kp N7    &kp N8    &kp N9                &mt LEFT_SHIFT N0  &kp RALT
                                            &trans    &mo 3          &trans     &trans     &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&trans      &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans        &trans
                                        &trans        &trans        &trans        &trans        &trans        &trans
            >;
        };

        hz {
            bindings = <
&mt LGUI KP_NUM  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9       &kp KP_MINUS  &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP  &kp SLCK         &kp CLCK
&mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6       &kp KP_PLUS   &kp C_MUTE    &kp LEFT  &kp UP     &kp RIGHT  &kp INS          &mt RCTRL K_APP
&kp LALT         &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3       &kp KP_DOT    &kp C_VOL_DN  &kp END   &kp DOWN   &kp PG_DN  &kp PAUSE_BREAK  &kp RALT
                                             &trans     &lt 3 NUMBER_7  &trans        &trans        &trans    &trans
            >;
        };
    };
};
