/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        as_ESC {
            bindings = <&kp ESCAPE>;
            key-positions = <13 14>;
        };

        bootLeft {
            bindings = <&bootloader>;
            key-positions = <38 37 36>;
        };

        bootRight {
            bindings = <&bootloader>;
            key-positions = <39 40 41>;
        };

        sys_reset_left {
            bindings = <&sys_reset>;
            key-positions = <5 4 3>;
        };

        sys_reset_right {
            bindings = <&sys_reset>;
            key-positions = <6 7 8>;
        };

        gui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <25 26>;
        };
    };

    macros {
        parenthesis: parenthesis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT_ARROW>;
            label = "PARENTHESIS";
        };

        double_quotes: double_quotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp DOUBLE_QUOTES &kp LEFT_ARROW>;
            label = "DOUBLE_QUOTES";
        };

        braces: braces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT_ARROW>;
            label = "BRACES";
        };

        vim_next_tab: vim_next_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp T>;
            label = "VIM_NEXT_TAB";
        };

        vim_prev_tab: vim_prev_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp LS(T)>;
            label = "VIM_PREV_TAB";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt GRAVE ESCAPE  &kp Q             &kp W  &kp E      &kp R  &kp T      &kp Y          &kp U               &kp I                    &kp O    &kp P                  &kp BACKSPACE
&kp TAB           &kp A             &kp S  &kp D      &kp F  &kp G      &kp H          &kp J               &kp K                    &kp L    &kp SEMI               &kp SINGLE_QUOTE
&kp LEFT_SHIFT    &mt LEFT_SHIFT Z  &kp X  &kp C      &kp V  &kp B      &kp N          &kp M               &kp COMMA                &kp DOT  &mt RIGHT_SHIFT SLASH  &kp BACKSLASH
                                           &kp SPACE  &mo 1  &kp RCTRL  &kp RIGHT_ALT  &lt 2 LEFT_BRACKET  &mt RIGHT_BRACKET ENTER
            >;
        };

        pc_layer {
            bindings = <
&to 4    &kp LG(NUMBER_3)  &kp LG(N0)    &kp LG(N9)        &mt LC(LS(T)) LG(N5)  &kp LG(N4)       &kp LC(PG_UP)                    &mkp MB1                  &mkp MB2                 &kp LC(PAGE_DOWN)  &trans           &trans
&kp TAB  &kp LG(N7)        &kp LEFT_ALT  &kp LG(R)         &kp CAPS              &kp LG(N8)       &mt HOME LEFT                    &mt PAGE_DOWN DOWN        &mt PG_UP UP_ARROW       &mt END RIGHT      &trans           &trans
&trans   &kp LEFT_SHIFT    &trans        &kp K_CALCULATOR  &kp LG(K)             &mt LS(DEL) DEL  &mt LC(PRINTSCREEN) PRINTSCREEN  &mt K_MUTE C_VOLUME_DOWN  &mt K_STOP K_PLAY_PAUSE  &kp C_VOLUME_UP    &kp RIGHT_SHIFT  &trans
                                         &trans            &trans                &kp LCTRL        &kp RIGHT_ALT                    &mo 3                     &trans
            >;
        };

        excl {
            bindings = <
&trans     &kp NUMBER_1       &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4   &kp N5     &kp NUMBER_6  &kp N7    &kp N8    &kp NUMBER_9                     &kp NUMBER_0                       &kp MINUS
&kp PLUS   &kp EXCL           &kp AT        &kp HASH      &kp DLLR       &kp PRCNT  &kp CARET     &kp AMPS  &kp STAR  &mt LEFT_BRACE LEFT_PARENTHESIS  &mt RIGHT_BRACE RIGHT_PARENTHESIS  &kp EQUAL
&kp EQUAL  &mt LEFT_SHIFT F1  &kp F2        &kp F3        &mt LA(F4) F4  &kp F5     &kp F6        &kp F7    &kp F8    &kp F9                           &mt LA(F10) F10                    &mt F12 F11
                                            &trans        &mo 3          &kp LCTRL  &kp LEFT_ALT  &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &vim_prev_tab  &vim_next_tab  &bt BT_SEL 4               &bt BT_SEL 3                          &bt BT_SEL 2                    &bt BT_SEL 1                 &bt BT_SEL 0  &bt BT_CLR
&tog 3      &trans        &trans        &trans        &trans         &trans         &mt LS(HOME) LS(LC(LEFT))  &mt LS(PAGE_DOWN) LS(LC(DOWN_ARROW))  &mt LS(PG_UP) LS(LC(UP_ARROW))  &mt LS(PG_UP) LS(LC(RIGHT))  &braces       &double_quotes
&none       &trans        &trans        &trans        &trans         &trans         &trans                     &trans                                &trans                          &trans                       &trans        &trans
                                        &trans        &trans         &trans         &trans                     &trans                                &trans
            >;
        };

        numpad {
            bindings = <
&kp KP_NUM       &kp KP_SLASH     &kp N7        &kp N8        &kp N9        &kp KP_MINUS  &trans  &trans  &trans  &trans  &trans  &kp BACKSPACE
&mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_PLUS   &trans  &trans  &trans  &trans  &trans  &trans
&none            &kp N0           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DOT    &trans  &trans  &trans  &trans  &trans  &trans
                                                &kp K_COPY    &to 0         &kp K_PASTE   &trans  &trans  &trans
            >;
        };

        game_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
